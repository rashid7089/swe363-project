import { useState } from 'react';
import Form from 'react-bootstrap/Form';
import './addP.css';

function AddProject() {
  const [validated, setValidated] = useState(false);
  const [title, setTitle] = useState('');
  const [teammatesN, setTeammatesN] = useState('');
  const [teammatesM, setTeammatesM] = useState('');
  const [projectDate, setProjectDate] = useState('');
  const [description, setDescription] = useState('');
  
  const handleSubmit = (event) => {
    const form = event.currentTarget;
    if (form.checkValidity() === false) {
      event.preventDefault();
      event.stopPropagation();
    } else {
      console.log("Project submitted:", { title, teammatesN, teammatesM, projectDate, description });
    }
    setValidated(true);
  };

  return (
    <div className="auth">
      <Form className="auth__form" noValidate validated={validated} onSubmit={handleSubmit}>
        <h1>Add a New KFUPM Senior Project</h1>
        <Form.Group className="mb-2" controlId="formTitle">
          <Form.Label>Title</Form.Label>
          <Form.Control
            type="text"
            required
            value={title}
            onChange={(e) => setTitle(e.target.value)}
            placeholder="Please Enter The Title"
            isInvalid={!title && validated}
          />
          <Form.Control.Feedback type="invalid">Title is required.</Form.Control.Feedback>
        </Form.Group>
        <Form.Group className="mb-2" controlId="formTeammatesN">
          <Form.Label>Teammate's Names</Form.Label>
          <Form.Control
            type="text"
            required
            value={teammatesN}
            onChange={(e) => setTeammatesN(e.target.value)}
            placeholder="Comma Separated"
            isInvalid={!teammatesN && validated}
          />
          <Form.Control.Feedback type="invalid">Teammate's names are required.</Form.Control.Feedback>
        </Form.Group>
        <Form.Group className="mb-2" controlId="formTeammatesM">
          <Form.Label>Teammate's Majors</Form.Label>
          <Form.Control
            type="text"
            required
            value={teammatesM}
            onChange={(e) => setTeammatesM(e.target.value)}
            placeholder="Comma Separated"
            isInvalid={!teammatesM && validated}
          />
          <Form.Control.Feedback type="invalid">Teammate's majors are required.</Form.Control.Feedback>
        </Form.Group>
        <Form.Group className="mb-2" controlId="formProjectDate">
          <Form.Label>Project Date</Form.Label>
          <Form.Control
            type="date"
            required
            value={projectDate}
            onChange={(e) => setProjectDate(e.target.value)}
            isInvalid={!projectDate && validated}
          />
          <Form.Control.Feedback type="invalid">Project date is required.</Form.Control.Feedback>
        </Form.Group>
        <Form.Group className="mb-2" controlId="formDescription">
          <Form.Label>Description</Form.Label>
          <Form.Control
            as="textarea"
            rows={3}
            required
            value={description}
            onChange={(e) => setDescription(e.target.value)}
            isInvalid={!description && validated}
          />
          <Form.Control.Feedback type="invalid">Description is required.</Form.Control.Feedback>
        </Form.Group>
        <button type="submit" className="auth__form__submit btn btn-primary">Upload The Project</button>
      </Form>
    </div>
  );
}

export default AddProject;
